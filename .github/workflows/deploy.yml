name: Deploy to Lightsail

on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Install and start MailHog
        run: |
          # Download and install MailHog
          wget -O mailhog https://github.com/mailhog/MailHog/releases/download/v1.0.1/MailHog_linux_amd64
          chmod +x mailhog
          sudo mv mailhog /usr/local/bin/
          
          # Start MailHog in background
          mailhog > /dev/null 2>&1 &
          echo "MailHog PID: $!"
          
          # Wait for MailHog to start
          sleep 5
          
          # Verify MailHog is running
          curl -f http://localhost:8025/ || echo "MailHog not responding on web interface"
          
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          
      - name: Set up environment for testing
        run: |
          # Set DJANGO_ENV to use .env.ci configuration
          echo "DJANGO_ENV=ci" >> $GITHUB_ENV
          
      - name: Run migrations
        run: |
          python manage.py migrate
          
      - name: Test MailHog connection
        run: |
          # Test that MailHog is accessible
          python -c "
          import socket
          try:
              sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
              sock.settimeout(5)
              result = sock.connect_ex(('localhost', 1025))
              sock.close()
              if result == 0:
                  print('✅ MailHog SMTP port 1025 is accessible')
              else:
                  print('❌ MailHog SMTP port 1025 is not accessible')
                  exit(1)
          except Exception as e:
              print(f'❌ Error testing MailHog connection: {e}')
              exit(1)
          "
          
      - name: Test email functionality with MailHog
        run: |
          # Test sending email via Django management command
          python manage.py test_mailhog_email --email ci-test@example.com
          
          # Verify email was captured by MailHog API
          sleep 2
          response=$(curl -s http://localhost:8025/api/v1/messages)
          if echo "$response" | grep -q "ci-test@example.com"; then
            echo "✅ Email successfully sent to MailHog"
          else
            echo "❌ Email not found in MailHog"
            echo "MailHog response: $response"
            exit 1
          fi
          
      - name: Run tests with coverage
        run: |
          coverage run --source='.' manage.py test
          coverage report
          coverage xml
          
      - name: Upload coverage to Codecov (optional)
        uses: codecov/codecov-action@v3
        with:
          file: ./coverage.xml
          fail_ci_if_error: false
        continue-on-error: true
        
      - name: Notify Slack on test failure (optional)
        if: failure()
        uses: 8398a7/action-slack@v3
        with:
          status: failure
          text: "❌ Tests failed in Organisize deployment pipeline"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        continue-on-error: true

  deploy:
    runs-on: ubuntu-latest
    needs: test  # This ensures tests must pass before deployment
    steps:
      - name: Connect to Lightsail & Pull Latest
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.LIGHTSAIL_IP }}
          username: ubuntu
          key: ${{ secrets.LIGHTSAIL_SSH_PRIVATE_KEY }}
          script: |
            cd organisize
            git pull origin main
            source venv/bin/activate
            pip install -r requirements.txt
            python manage.py migrate
            python manage.py collectstatic --noinput
            sudo systemctl restart gunicorn
